/* auto-generated by NAPI-RS */
/* eslint-disable */
export interface CompilerOptions {
  allowJs?: boolean
  allowArbitraryExtensions?: boolean
  allowSyntheticDefaultImports?: boolean
  allowImportingTsExtensions?: boolean
  allowNonTsExtensions?: boolean
  allowUmdGlobalAccess?: boolean
  allowUnreachableCode?: boolean
  allowUnusedLabels?: boolean
  assumeChangesOnlyAffectDirectDependencies?: boolean
  alwaysStrict?: boolean
  baseUrl?: string
  build?: boolean
  checkJs?: boolean
  customConditions?: Array<string>
  composite?: boolean
  emitDeclarationOnly?: boolean
  emitBom?: boolean
  emitDecoratorMetadata?: boolean
  downlevelIteration?: boolean
  declaration?: boolean
  declarationDir?: string
  declarationMap?: boolean
  disableSizeLimit?: boolean
  disableSourceOfProjectReferenceRedirect?: boolean
  disableSolutionSearching?: boolean
  disableReferencedProjectLoad?: boolean
  esModuleInterop?: boolean
  exactOptionalPropertyTypes?: boolean
  experimentalDecorators?: boolean
  forceConsistentCasingInFileNames?: boolean
  isolatedModules?: boolean
  isolatedDeclarations?: boolean
  ignoreDeprecations?: string
  importHelpers?: boolean
  inlineSourceMap?: boolean
  inlineSources?: boolean
  init?: boolean
  incremental?: boolean
  jsx: JsxEmit
  jsxFactory?: string
  jsxFragmentFactory?: string
  jsxImportSource?: string
  keyofStringsOnly?: boolean
  lib?: Array<string>
  locale?: string
  mapRoot?: string
  moduleKind: ModuleKind
  moduleResolution: ModuleResolutionKind
  moduleSuffixes?: Array<string>
  moduleDetection: ModuleDetectionKind
  newLine: NewLineKind
  noEmit?: boolean
  noCheck?: boolean
  noErrorTruncation?: boolean
  noFallthroughCasesInSwitch?: boolean
  noImplicitAny?: boolean
  noImplicitThis?: boolean
  noImplicitReturns?: boolean
  noEmitHelpers?: boolean
  noLib?: boolean
  noPropertyAccessFromIndexSignature?: boolean
  noUncheckedIndexedAccess?: boolean
  noEmitOnError?: boolean
  noUnusedLocals?: boolean
  noUnusedParameters?: boolean
  noResolve?: boolean
  noImplicitOverride?: boolean
  noUncheckedSideEffectImports?: boolean
  out?: string
  outDir?: string
  outFile?: string
  paths?: Record<string, Array<string>>
  preserveConstEnums?: boolean
  preserveSymlinks?: boolean
  project?: string
  resolveJsonModule?: boolean
  resolvePackageJsonExports?: boolean
  resolvePackageJsonImports?: boolean
  removeComments?: boolean
  rewriteRelativeImportExtensions?: boolean
  reactNamespace?: string
  rootDir?: string
  rootDirs?: Array<string>
  skipLibCheck?: boolean
  strict?: boolean
  strictBindCallApply?: boolean
  strictBuiltinIteratorReturn?: boolean
  strictFunctionTypes?: boolean
  strictNullChecks?: boolean
  strictPropertyInitialization?: boolean
  stripInternal?: boolean
  skipDefaultLibCheck?: boolean
  sourceMap?: boolean
  sourceRoot?: string
  suppressOutputPathCheck?: boolean
  target: ScriptTarget
  traceResolution?: boolean
  tsBuildInfoFile?: string
  typeRoots?: Array<string>
  types?: Array<string>
  useDefineForClassFields?: boolean
  useUnknownInCatchVariables?: boolean
  verbatimModuleSyntax?: boolean
  maxNodeModuleJsDepth?: number
  configFilePath?: string
  noDtsResolution?: boolean
  pathsBasePath?: string
  diagnostics?: boolean
  extendedDiagnostics?: boolean
  generateCpuProfile?: string
  generateTrace?: string
  listEmittedFiles?: boolean
  listFiles?: boolean
  explainFiles?: boolean
  listFilesOnly?: boolean
  noEmitForJsFiles?: boolean
  preserveWatchOutput?: boolean
  pretty?: boolean
  version?: boolean
  watch?: boolean
  showConfig?: boolean
  tscBuild?: boolean
}

export declare const enum JsxEmit {
  None = 0,
  Preserve = 1,
  ReactNative = 2,
  React = 3,
  ReactJSX = 4,
  ReactJSXDev = 5
}

export declare const enum ModuleDetectionKind {
  None = 0,
  Auto = 1,
  Legacy = 2,
  Force = 3
}

export declare const enum ModuleKind {
  None = 0,
  CommonJS = 1,
  AMD = 2,
  UMD = 3,
  System = 4,
  ES2015 = 5,
  ES2020 = 6,
  ES2022 = 7,
  ESNext = 99,
  Node16 = 100,
  NodeNext = 199,
  Preserve = 200
}

export declare const enum ModuleResolutionKind {
  Unknown = 0,
  Node16 = 3,
  NodeNext = 99,
  Bundler = 100
}

export declare const enum NewLineKind {
  None = 0,
  CRLF = 1,
  LF = 2
}

export declare function runProject(project: string): void

export declare const enum ScriptTarget {
  None = 0,
  ES5 = 1,
  ES2015 = 2,
  ES2016 = 3,
  ES2017 = 4,
  ES2018 = 5,
  ES2019 = 6,
  ES2020 = 7,
  ES2021 = 8,
  ES2022 = 9,
  ES2023 = 10,
  ESNext = 99,
  JSON = 100
}

export declare function transpileModule(input: string | Uint8Array, options: TranspileModuleOptions): string

export interface TranspileModuleOptions {
  filename?: string
  compilerOptions?: CompilerOptions
}
